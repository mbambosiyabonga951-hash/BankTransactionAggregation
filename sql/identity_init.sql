IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'auth') EXEC('CREATE SCHEMA auth'); GO
IF OBJECT_ID('auth.AspNetRoles','U') IS NULL CREATE TABLE auth.AspNetRoles ( Id nvarchar(450) NOT NULL PRIMARY KEY, Name nvarchar(256) NULL, NormalizedName nvarchar(256) NULL UNIQUE, ConcurrencyStamp nvarchar(max) NULL );
IF OBJECT_ID('auth.AspNetUsers','U') IS NULL CREATE TABLE auth.AspNetUsers ( Id nvarchar(450) NOT NULL PRIMARY KEY, UserName nvarchar(256) NULL, NormalizedUserName nvarchar(256) NULL UNIQUE, Email nvarchar(256) NULL, NormalizedEmail nvarchar(256) NULL, EmailConfirmed bit NOT NULL DEFAULT(0), PasswordHash nvarchar(max) NULL, SecurityStamp nvarchar(max) NULL, ConcurrencyStamp nvarchar(max) NULL, PhoneNumber nvarchar(max) NULL, PhoneNumberConfirmed bit NOT NULL DEFAULT(0), TwoFactorEnabled bit NOT NULL DEFAULT(0), LockoutEnd datetimeoffset NULL, LockoutEnabled bit NOT NULL DEFAULT(0), AccessFailedCount int NOT NULL DEFAULT(0) );
IF OBJECT_ID('auth.AspNetRoleClaims','U') IS NULL CREATE TABLE auth.AspNetRoleClaims ( Id int IDENTITY(1,1) NOT NULL PRIMARY KEY, RoleId nvarchar(450) NOT NULL, ClaimType nvarchar(max) NULL, ClaimValue nvarchar(max) NULL, CONSTRAINT FK_RoleClaims_Roles FOREIGN KEY (RoleId) REFERENCES auth.AspNetRoles (Id) ON DELETE CASCADE );
IF OBJECT_ID('auth.AspNetUserClaims','U') IS NULL CREATE TABLE auth.AspNetUserClaims ( Id int IDENTITY(1,1) NOT NULL PRIMARY KEY, UserId nvarchar(450) NOT NULL, ClaimType nvarchar(max) NULL, ClaimValue nvarchar(max) NULL, CONSTRAINT FK_UserClaims_Users FOREIGN KEY (UserId) REFERENCES auth.AspNetUsers (Id) ON DELETE CASCADE );
IF OBJECT_ID('auth.AspNetUserLogins','U') IS NULL CREATE TABLE auth.AspNetUserLogins ( LoginProvider nvarchar(128) NOT NULL, ProviderKey nvarchar(128) NOT NULL, ProviderDisplayName nvarchar(max) NULL, UserId nvarchar(450) NOT NULL, PRIMARY KEY (LoginProvider, ProviderKey), CONSTRAINT FK_UserLogins_Users FOREIGN KEY (UserId) REFERENCES auth.AspNetUsers (Id) ON DELETE CASCADE );
IF OBJECT_ID('auth.AspNetUserTokens','U') IS NULL CREATE TABLE auth.AspNetUserTokens ( UserId nvarchar(450) NOT NULL, LoginProvider nvarchar(128) NOT NULL, Name nvarchar(128) NOT NULL, Value nvarchar(max) NULL, PRIMARY KEY (UserId, LoginProvider, Name), CONSTRAINT FK_UserTokens_Users FOREIGN KEY (UserId) REFERENCES auth.AspNetUsers (Id) ON DELETE CASCADE );
IF OBJECT_ID('auth.AspNetUserRoles','U') IS NULL CREATE TABLE auth.AspNetUserRoles ( UserId nvarchar(450) NOT NULL, RoleId nvarchar(450) NOT NULL, PRIMARY KEY (UserId, RoleId), CONSTRAINT FK_UserRoles_Users FOREIGN KEY (UserId) REFERENCES auth.AspNetUsers (Id) ON DELETE CASCADE, CONSTRAINT FK_UserRoles_Roles FOREIGN KEY (RoleId) REFERENCES auth.AspNetRoles (Id) ON DELETE CASCADE );
